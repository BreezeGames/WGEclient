{"version":3,"sources":["wgecore.js"],"names":["Buffer","gl","data","type","drawType","STATIC_DRAW","debug","_data","_type","_drawType","_buffer","createBuffer","bindBuffer","bufferData","Float32Array","err","Error","IS_DEBUG","VERTEX_SHADER","FRAGMENT_SHADER","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","DYNAMIC_DRAW","LINK_STATUS","FLOAT","TRIANGLE_STRIP","Render","canvas","width","height","_canvas","_ctx","getContext","e","_renderScene","_isFullScreen","prototype","setRenderScene","scene","viewport","getCanvas","clearColor","r","g","b","a","getParameter","COLOR_CLEAR_VALUE","clearScreen","depth","clr","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","clear","draw","update","x","y","setFullScreen","yes","canvasW","canvasH","window","innerWidth","innerHeight","Scene","parseShader","xml","xmlType","shader","querySelector","console","info","textContent","Shader","shaderXml","_shaderText","_shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","Program","vertex","fragment","_gl","_program","createProgram","attachShader","linkProgram","getProgramParameter","name","getAttribLocation","useProgram","string","log"],"mappings":"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","file":"wgecore.js","sourcesContent":["\"use strict\";\n/**\n * Created by jorgen on 25.09.16.\n */\n/* Buffer incapsulation class */\n/* version: 1.0               */\n\nclass Buffer {\n    constructor(gl, data, type, drawType = STATIC_DRAW) {\ndebug(\"[Buffer constructor]: Constructing buffer\");\n\n        try {\n            this._data = data;\n            this._type = type;\n            this._drawType = drawType;\n            this.gl = gl;\n\n            this._buffer = gl.createBuffer();\n            this.gl.bindBuffer(this._type, this._buffer);\n            this.gl.bufferData(this._type, new Float32Array(this._data), this._drawType);\n        } catch(err) {\n            throw new Error(`[Buffer constructor] error: ${err}`);\n        }\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    bind() {\n        this.gl.bindBuffer(this._type, this._buffer);\n    }\n}\n\"use strict\";\n\n/**\n * Created by jorgen on 24.09.16.\n */\n/* WGEngine definitions */\n\nvar IS_DEBUG = true;\n\nvar VERTEX_SHADER           = 0x8B31,\n    FRAGMENT_SHADER         = 0x8B30;\n\n\nvar ARRAY_BUFFER            = 0x8892,\n    ELEMENT_ARRAY_BUFFER    = 0x8893;\n\nvar STREAM_DRAW             = 0x88E0,\n    STATIC_DRAW             = 0x88E4,\n    DYNAMIC_DRAW            = 0x88E8;\n\nvar LINK_STATUS             = 0x8B82;\n\nvar FLOAT                   = 0x1406;\n\nvar TRIANGLE_STRIP          = 0x0005;\n'use strict';\r\n\r\n\r\nfunction Render(canvas, width, height) {\r\n    if (!canvas) {\r\n        throw new Error(\"[Render constructor]: wrong _canvas element\");\r\n    }\r\n\r\n    this._canvas = canvas;\r\n\r\ndebug(\"[Render constructor]: initializing webGL context\");\r\n    this._ctx = null;\r\n    try {\r\n        this._ctx =\r\n            this._canvas.getContext('webgl') ||\r\n            this._canvas.getContext('experemental-webgl');\r\n    } catch (e) { }\r\n\r\n    if (!this._ctx) {\r\n        throw new Error(\"[Render constructor]: webgl not supported!\");\r\n    }\r\n\r\n    if (width) {\r\n        this._canvas.width = width;\r\n    }\r\n    if (height) {\r\n        this._canvas.height = height;\r\n    }\r\n\r\n    this._renderScene = null;\r\n    this._isFullScreen = false;\r\n}\r\n\r\nRender.prototype.setRenderScene = function(scene) {\r\n    if (scene) {\r\n        this._renderScene = scene;\r\n    }\r\n};\r\n\r\n\r\nRender.prototype.width = function(width) {\r\n    if (width) {\r\n        this._canvas.width = width;\r\n        this.viewport(0, 0, this.width(), this.height());\r\n    } else {\r\n        return this._canvas.width;\r\n    }\r\n};\r\n\r\nRender.prototype.height = function(height) {\r\n    if (height) {\r\n        this._canvas.height = height;\r\n        this.viewport(0, 0, this.width(), this.height());\r\n    } else {\r\n        return this._canvas.height;\r\n    }\r\n};\r\n\r\nRender.prototype.getCanvas = function() {\r\n    return this._canvas;\r\n};\r\n\r\nRender.prototype.getContext = function() {\r\n    return this._ctx;\r\n};\r\n\r\nRender.prototype.clearColor = function(r, g, b, a) {\r\n    if (r) {\r\n        this._ctx.clearColor(r, g, b, a);\r\n    } else {\r\n        return this._ctx.getParameter(this._ctx.COLOR_CLEAR_VALUE);\r\n    }\r\n};\r\n\r\nRender.prototype.clearScreen = function(depth) {\r\n    let clr = this._ctx.COLOR_BUFFER_BIT;\r\n    clr |= depth ? this._ctx.DEPTH_BUFFER_BIT : 0;\r\n\r\n    this._ctx.clear(clr);\r\n};\r\n\r\nRender.prototype.draw = function() {\r\n    if (this._renderScene) {\r\n        this._renderScene.update();\r\n        this._renderScene.draw();\r\n    }\r\n};\r\n\r\nRender.prototype.viewport = function(x, y, width, height) {\r\n    this._ctx.viewport(x, y, width, height);\r\n};\r\n\r\nRender.prototype.setFullScreen = function(yes) {\r\n    if (this._isFullScreen == yes) return;\r\n\r\n    if (yes) {\r\n        this.canvasW = this.width();\r\n        this.canvasH = this.height();\r\n        this._isFullScreen = true;\r\n        this.viewport(0, 0, window.innerWidth, window.innerHeight);\r\n        this.width(window.innerWidth);\r\n        this.height(window.innerHeight);\r\n    } else {\r\n        this._isFullScreen = false;\r\n        this.width(this.canvasW);\r\n        this.height(this.canvasH);\r\n        this.viewport(0, 0, this.width(), this.height());\r\n    }\r\n};\n\"use strict\";\n/**\n * Created by jorgen on 25.09.16.\n */\n/* Renderer scene interface */\n/* version: 0.1 */\n\nclass Scene {\n    constructor() {\n\n    }\n\n    init() {\n        throw new Error(\"Init method not implemented\");\n    }\n\n    draw() {\n        throw new Error(\"Draw method not implemented\");\n    }\n\n    update() {\n        throw new Error(\"Update method not implemented\");\n    }\n}\n\"use strict\";\n\n/**\n * Created by jorgen on 24.09.16.\n */\n/* WGEngine shaders */\n/* version: 1.1 */\n\n\nfunction parseShader(xml, type) {\n    let xmlType = null;\n    switch(type) {\n        case VERTEX_SHADER:\n            xmlType = \"vertex\";\n            break;\n        case FRAGMENT_SHADER:\n            xmlType = \"fragment\";\n            break;\n        default:\n            throw new Error(\"Appropriate shader type\");\n    }\n\n    let shader = xml.querySelector(`shader[type=\"${xmlType}\"]`);\n    console.info(shader);\n    if (!shader) {\n        throw new Error(`Can't find shader resource of type ${xmlType}`);\n    }\n\n    return shader.textContent;\n}\n\n/**********************************\n * Create shader from XML file\n * @param gl WebGL context\n * @param name XML shader file name on server\n * @param type Shader type. Can be gl.VERTEX_SHADER or gl.FRAGMENT_SHADER\n * @constructor\n */\nfunction Shader(gl, shaderXml, type) {\ndebug(`[Shader constructor]: creating shader`);\n\n    this._shaderText = null;\n    this._shader = null;\n    this._type = type;\n\n    this._shaderText = parseShader(shaderXml);\n    this._shader = gl.createShader(this._type);\n    gl.shaderSource(this._shader, this._shaderText);\n    gl.compileShader(this._shader);\n\n    if (!gl.getShaderParameter(this._shader, gl.COMPILE_STATUS)) {\n        let info = gl.getShaderInfoLog(this._shader);\n        throw new Error(`shader compile error \\n ${info}`);\n    }\n\n};\n\nShader.prototype.shader = () => {\n    return this._shader;\n};\n\nShader.prototype.type = () => {\n    return this._type;\n};\n\n/*\n    Program class\n    version: 1.0\n */\nclass Program {\n    constructor(gl, vertex, fragment) {\n        this._gl = gl;\n        this._program = gl.createProgram();\n\n        if (vertex) {\n            gl.attachShader(this._program, vertex.shader());\n        }\n        if (fragment) {\n            gl.attachShader(this._program, fragment.shader());\n        }\n\n        gl.linkProgram(this._program);\n\n        if (!gl.getProgramParameter(this._program, LINK_STATUS)) {\n            throw new Error(\"[Program constructor] linking error\");\n        }\n    }\n\n    get program() {\n        return this._program;\n    }\n\n    getAttribute(name) {\n        return this._gl.getAttribLocation(this._program, name);\n    }\n\n    use() {\n        this._gl.useProgram(this._program);\n    }\n}\n'use strict';\n\n// UTTILS\nfunction debug(string) {\n    if (IS_DEBUG) {\n        console.log(string);\n    }\n}\n\n"]}